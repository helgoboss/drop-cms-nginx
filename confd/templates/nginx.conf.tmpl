user root root;
worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;
    
    # Pass some nice info to backend
    proxy_set_header Host $host;
    
    # Backend shall see the real IP, not the one of the proxy
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    
    # Enable keep-alive connections to reduce server load and increase performance (very good for SSL also)
    keepalive_timeout  65;
    
    # Configure cache
    proxy_cache_path /var/cache/nginx/drop-cms-live keys_zone=drop-cms-live-cache:10m
                    max_size=1000m inactive=7d;
    proxy_cache_use_stale updating error timeout http_500 http_502 http_503 http_504;
    proxy_cache_background_update on;
           
    # Use this name server to resolve proxy backends dynamically (in Rancher that means that backends can be restarted and nginx is going to find them)
    resolver {{getv "/nameserver"}};
    
    # Default server
    server {
        return 404;
    }
  
    # Preview
    
    server {
        listen 80;
        server_name  {{getv "/preview/fqdn"}};

        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }
                
        # Access with password only
        auth_basic "Closed website";
        auth_basic_user_file {{getv "/htpasswd/path"}};

        location / {
            # Use proxy_pass with variable to force dynamic DNS lookup
            set $backend "http://drop-cms-preview:8080";
            proxy_pass $backend;
            proxy_redirect http:// $http_x_forwarded_proto://;
        }
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
    
    # Live
    
    {{if getv "/secondary/live/fqdn"}}
    server {
        listen        80;
        server_name   {{getv "/secondary/live/fqdn"}};

        return        301 $http_x_forwarded_proto://{{getv "/primary/live/fqdn"}}$request_uri;
    }
    {{end}}
    
    server {
        listen       80;
        server_name  {{getv "/primary/live/fqdn"}};
        
        # Determine preferred language: accept-language: en,en-US;q=0.8,ja;q=0.6
        set $first_language $http_accept_language;
        if ($http_accept_language ~* '^(.+?),') {
            set $first_language $1;
        }
        set $language_suffix 'en';
        if ($first_language ~* 'de') {
            set $language_suffix 'de';
        }
        
        # HTTP and HTTPS should deliver exactly the same results here so we don't want $scheme to be included in the cache key
        proxy_cache_key "$request_method$host$request_uri$is_args$args$language_suffix";                 
                
        # Switch on server cache
        proxy_cache drop-cms-live-cache;  
        
        # We cache a short time and explicitly use wget with custom HTTP header X-Refresh-Cache to refresh cache on publish.
        # We don't cache forever because otherwise removed pages would stay forever.
        # Previously, a slow crawler in background took care to keep the cache warm so nobody ever needs to wait. Now we have
        # proxy_cache_background_update.
        proxy_cache_valid 200 302 1m;
        proxy_cache_valid 404 1m;
        proxy_cache_bypass $http_x_refresh_cache;
               
        # Switch on client cache
        expires 1m;
        
        # Add some cache info
        add_header X-Cache-Status $upstream_cache_status;

        location / {
            # Use proxy_pass with variable to force dynamic DNS lookup
            set $backend "http://drop-cms-live:8080";
            proxy_pass $backend;
            proxy_redirect http:// $http_x_forwarded_proto://;
        }
        
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }
    }
}
